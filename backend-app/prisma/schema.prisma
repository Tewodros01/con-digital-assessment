// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  username     String            @unique
  email        String?           @unique
  messages     Message[]         @relation("SentMessages")
  participants RoomParticipant[]
  createdAt    DateTime          @default(now())
}

model Room {
  id           String            @id @default(uuid())
  name         String?
  isGroup      Boolean           @default(false)
  messages     Message[]
  participants RoomParticipant[]
  createdAt    DateTime          @default(now())
}

model RoomParticipant {
  id       String   @id @default(uuid())
  roomId   String
  userId   String
  joinedAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([roomId, userId])
}

model Message {
  id        String   @id @default(uuid())
  content   String
  senderId  String
  roomId    String
  createdAt DateTime @default(now())

  sender User @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  room   Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
}
